The model should contain the following pattern:

```python
# Assume `input_tensor` is a tensor with a floating-point data type.
t1 = tf.cast(input_tensor, dtype=tf.float32)
t2 = tf.cast(t1, dtype=tf.float64)
t3 = tf.cast(t2, dtype=tf.float16)
t4 = tf.cast(t3, dtype=tf.float32)
```

The pattern describes a sequence of floating-point type conversions where a tensor undergoes multiple `cast` operations, each changing the data type to another floating-point type. The sequence must include at least two conversions, and the final conversion should result in the same data type as the original tensor. This pattern allows the optimization pass to simplify the chain of conversions directly from the original type to the final type, triggering the `SimplifyFpConversions` optimization.